{"version":3,"sources":["components/Select.js","constants/statAttributes.js","components/SortHelper.js","constants/statCategories.js","components/StatsList.js","components/StatsTable.js","components/StatsLoadingSpinner.js","components/DataDisplay.js","api/outlookAPI.js","hooks/useActiveWeek.js","hooks/useWeeklyStats.js","components/App.js","index.js"],"names":["Select","label","value","onChange","children","FormControl","fullWidth","InputLabel","map","MenuItem","key","NAME","COMMON_ATTRIBUTES","RUSHING_ATTRIBUTES","RECEIVING_ATTRIBUTES","RUSHING_AND_RECEIVING_ATTRIBUTES","displayConfig","text","useStyles","makeStyles","button","display","width","directionDesc","transform","directionAsc","hidden","menuItem","backgroundColor","cursor","anchorOrigin","vertical","horizontal","transformOrigin","SortChip","attribute","sortBy","sortDirection","onSort","attributeText","Chip","onClick","color","clickable","onDelete","deleteIcon","className","clsx","SortHelper","attributes","sort","useState","anchorEl","setAnchorEl","sortText","Button","variant","event","currentTarget","startIcon","endIcon","Menu","open","Boolean","onClose","getContentAnchorEl","classes","root","statCategories","categoriesConfig","name","paper","height","stats","flexGrow","justifyContent","textAlign","tidbit","flexDirection","marginLeft","fontSize","bold","fontWeight","noContent","alignItems","Tidbit","primary","secondary","tertiary","Typography","StatsList","category","data","rowRenderer","style","index","player","get","tidbits","push","ListItem","ListItemText","primaryTypographyProps","secondaryTypographyProps","noRowsRenderer","Paper","rowCount","size","rowHeight","rowHeightStyle","MuiVirtualizedTable","createSortHandler","property","props","getRowClassName","tableRow","flexContainer","tableRowHover","headerRenderer","columnIndex","dataKey","sortProperties","TableCell","tableHeader","tableCell","component","align","TableSortLabel","sortLabel","active","direction","cellRenderer","cellData","rowData","displayTeam","this","columns","tableProps","columnComponents","other","headerProps","headerHeight","rowClassName","React","PureComponent","VirtualizedTable","withStyles","theme","boxSizing","palette","grey","main","flex","StatsTable","rowGetter","useCallback","useMemo","loaderContainer","loaderText","fontStyle","margin","LoadingSpinner","loadingText","setLoadingText","useTheme","useEffect","timeout","setTimeout","clearTimeout","loading","getDefaultSort","DataDisplay","searchTerm","setSort","sortedData","setSortedData","filteredData","setFilteredData","isMobile","useMediaQuery","breakpoints","down","handleFiltering","debounce","filter","row","toUpperCase","includes","sorted","reverse","handleSort","filtering","isEmpty","StatsLoadingSpinner","outlookAPI","axios","create","baseURL","useActiveWeek","week","setWeek","then","response","useWeeklyStats","selectedWeek","Map","weeklyStats","setWeeklyStats","loadingMap","setLoadingMap","has","set","playerList","List","weekNums","weeks","i","container","box","controls","padding","searchBar","marginTop","content","paddingBottom","App","setCategory","setSearchTerm","handleChangeWeek","target","handleChangeCategory","handleChangeSearchTerm","isLoadingWeek","filteredStats","statsOfTheWeek","id","Container","Box","weekOptions","num","categoryOptions","cat","Grid","spacing","item","xs","renderSelects","TextField","placeholder","InputProps","startAdornment","InputAdornment","position","createMuiTheme","GlobalCss","textDecoration","ReactDOM","render","CssBaseline","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.9964bbce.chunk.js","sourcesContent":["import React from 'react';\r\nimport { \r\n    FormControl,\r\n    InputLabel,\r\n    Select as MuiSelect,\r\n    MenuItem\r\n} from '@material-ui/core';\r\n\r\nconst Select = ({ label, value, onChange, children }) => {\r\n    return (\r\n        <FormControl\r\n            fullWidth\r\n        >\r\n            <InputLabel>{label}</InputLabel>\r\n            <MuiSelect value={value} onChange={onChange}>\r\n                {children.map(({ value, label }) => (\r\n                    <MenuItem key={value || 'none'} value={value}>\r\n                        {label}\r\n                    </MenuItem>\r\n                ))}\r\n            </MuiSelect>\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport default Select;","export const ID = 'id';\r\nexport const NAME = 'name';\r\nexport const TEAM = 'team';\r\nexport const PLAYER_TYPE = 'type';\r\n\r\nexport const CARRIES = 'carries';\r\nexport const YARDS_RUSHING = 'yardsRushing';\r\nexport const YARDS_RUSHING_AVERAGE = 'yardsRushingAverage';\r\nexport const TD_RUSHING = 'tdRushing';\r\nexport const LONG_RUSHING = 'longRushing';\r\n\r\nexport const RECEPTIONS = 'receptions';\r\nexport const YARDS_RECEIVING = 'yardsReceiving';\r\nexport const YARDS_RECEIVING_AVERAGE = 'yardsReceivingAverage';\r\nexport const TD_RECEIVING = 'tdReceiving';\r\nexport const LONG_RECEIVING = 'longReceiving';\r\nexport const TARGETS = 'targets';\r\n\r\nexport const TOTAL_YARDS = 'totalYards';\r\nexport const TOTAL_TDS = 'totalTds';\r\n\r\nexport const COMMON_ATTRIBUTES = [\r\n    NAME\r\n];\r\n\r\nexport const RUSHING_ATTRIBUTES = [\r\n    CARRIES,\r\n    YARDS_RUSHING,\r\n    YARDS_RUSHING_AVERAGE,\r\n    TD_RUSHING,\r\n    LONG_RUSHING\r\n];\r\n\r\nexport const RECEIVING_ATTRIBUTES = [\r\n    TARGETS,\r\n    RECEPTIONS,\r\n    YARDS_RECEIVING,\r\n    YARDS_RECEIVING_AVERAGE,\r\n    TD_RECEIVING,\r\n    LONG_RECEIVING,\r\n];\r\n\r\nexport const RUSHING_AND_RECEIVING_ATTRIBUTES = [\r\n    CARRIES,\r\n    YARDS_RUSHING,\r\n    TARGETS,\r\n    RECEPTIONS,\r\n    YARDS_RECEIVING,\r\n    TOTAL_YARDS,\r\n    TOTAL_TDS\r\n];\r\n\r\nexport const displayConfig = {\r\n    [NAME]: {\r\n        text: 'Player'\r\n    },\r\n    [TEAM]: {\r\n        text: 'Team'\r\n    },\r\n    [CARRIES]: {\r\n        text: 'Carries'\r\n    },\r\n    [YARDS_RUSHING]: {\r\n        text: 'Rushing'\r\n    },\r\n    [YARDS_RUSHING_AVERAGE]: {\r\n        text: 'Rushing (Avg)'\r\n    },\r\n    [TD_RUSHING]: {\r\n        text: 'TD Rushes'\r\n    },\r\n    [LONG_RUSHING]: {\r\n        text: 'Longest Rush'\r\n    },\r\n    [TARGETS]: {\r\n        text: 'Targets'\r\n    },\r\n    [RECEPTIONS]: {\r\n        text: 'Receptions'\r\n    },\r\n    [YARDS_RECEIVING]: {\r\n        text: 'Receiving'\r\n    },\r\n    [YARDS_RECEIVING_AVERAGE]: {\r\n        text: 'Receiving (Avg)'\r\n    },\r\n    [TD_RECEIVING]: {\r\n        text: 'TD Catches'\r\n    },\r\n    [LONG_RECEIVING]: {\r\n        text: 'Longest Catch'\r\n    },\r\n    [TOTAL_YARDS]: {\r\n        text: 'Total Yards'\r\n    },\r\n    [TOTAL_TDS]: {\r\n        text: 'Total TDs'\r\n    }\r\n};","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { Button, Menu, MenuItem, Chip, makeStyles } from '@material-ui/core';\r\nimport SortIcon from '@material-ui/icons/Sort';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport { displayConfig } from '../constants/statAttributes';\r\n\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        display: 'flex',\r\n        width: '100%'\r\n    },\r\n    directionDesc: {\r\n        transform: 'rotate(0deg)'\r\n    },\r\n    directionAsc: {\r\n        transform: 'rotate(180deg)'\r\n    },\r\n    hidden: {\r\n        display: 'none'\r\n    },\r\n    menuItem: {\r\n        '&:hover': {\r\n            backgroundColor: 'unset',\r\n            cursor: 'unset'\r\n        }\r\n    }\r\n});\r\n\r\nconst anchorOrigin = {\r\n    vertical: 'bottom',\r\n    horizontal: 'center'\r\n};\r\n\r\nconst transformOrigin = {\r\n    vertical: 'top',\r\n    horizontal: 'center'\r\n};\r\n\r\nconst SortChip = ({ attribute, sortBy, sortDirection, onSort }) => {\r\n\r\n    const attributeText = displayConfig[attribute].text;\r\n    const { hidden, directionDesc, directionAsc } = useStyles();\r\n\r\n    return (\r\n        <Chip\r\n            label={attributeText}\r\n            onClick={() => onSort(attribute)}\r\n            color={attribute === sortBy ? 'primary' : 'default'}\r\n            clickable\r\n            onDelete={() => onSort(attribute)}\r\n            deleteIcon={(\r\n                <ArrowDownwardIcon \r\n                    className={clsx({\r\n                        [directionDesc]: sortDirection === 'desc',\r\n                        [directionAsc]: sortDirection === 'asc',\r\n                        [hidden]: attribute !== sortBy\r\n                    })}\r\n                />\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nconst SortHelper = ({ attributes, sort, onSort }) => {\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const { button, directionDesc, directionAsc, menuItem } = useStyles();\r\n    const { sortBy, sortDirection } = sort;\r\n    const sortText = displayConfig[sortBy].text;\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                className={button}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleClick}\r\n                startIcon={<SortIcon />}\r\n                endIcon={\r\n                    <ArrowDownwardIcon \r\n                        className={clsx({\r\n                            [directionDesc]: sortDirection === 'desc',\r\n                            [directionAsc]: sortDirection === 'asc'\r\n                        })}\r\n                    />\r\n                }\r\n            >\r\n                {sortText}\r\n            </Button>\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n                anchorOrigin={anchorOrigin}\r\n                transformOrigin={transformOrigin}\r\n                getContentAnchorEl={null}\r\n            >\r\n                {attributes.map(attribute => (\r\n                    <MenuItem\r\n                        key={attribute}\r\n                        classes={{\r\n                            root: menuItem\r\n                        }}\r\n                    >\r\n                        <SortChip\r\n                            attribute={attribute}\r\n                            sortBy={sortBy}\r\n                            sortDirection={sortDirection}\r\n                            onSort={onSort}\r\n                        />\r\n                    </MenuItem>\r\n                ))}\r\n            </Menu>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default SortHelper;","export const RUSHING = 'rusher';\r\nexport const RECEIVING = 'receiver';\r\nexport const RUSHING_AND_RECEIVING = 'both';\r\n\r\nexport const statCategories = [\r\n    RUSHING,\r\n    RECEIVING,\r\n    RUSHING_AND_RECEIVING\r\n];\r\n\r\nexport const categoriesConfig = {\r\n    [RUSHING]: {\r\n        name: 'Rushing'\r\n    },\r\n    [RECEIVING]: {\r\n        name: 'Receiving'\r\n    },\r\n    [RUSHING_AND_RECEIVING]: {\r\n        name: 'Rushing and Receiving'\r\n    }\r\n};","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { AutoSizer, List as VirtualizedList } from 'react-virtualized';\r\nimport { \r\n    Paper,\r\n    ListItem,\r\n    ListItemText,\r\n    Typography,\r\n    makeStyles\r\n} from '@material-ui/core';\r\nimport SortHelper from './SortHelper';\r\nimport {\r\n    ID,\r\n    NAME,\r\n    TEAM,\r\n    CARRIES,\r\n    YARDS_RUSHING,\r\n    YARDS_RUSHING_AVERAGE,\r\n    TD_RUSHING,\r\n    TD_RECEIVING,\r\n    YARDS_RECEIVING,\r\n    YARDS_RECEIVING_AVERAGE,\r\n    RECEPTIONS,\r\n    TARGETS,\r\n    TOTAL_YARDS,\r\n    TOTAL_TDS\r\n} from '../constants/statAttributes';\r\nimport { RUSHING, RECEIVING, RUSHING_AND_RECEIVING } from '../constants/statCategories';\r\n\r\nconst useStyles = makeStyles({\r\n    paper: {\r\n        height: '100%',\r\n        width: '100%',\r\n    },\r\n    stats: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        justifyContent: 'flex-end',\r\n        textAlign: 'right'\r\n    },\r\n    tidbit: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n        marginLeft: 16\r\n    },\r\n    text: {\r\n        fontSize: '0.75rem'\r\n    },\r\n    bold: {\r\n        fontWeight: 'bold'\r\n    },\r\n    noContent: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    }\r\n});\r\n\r\nconst Tidbit = ({ primary, secondary, tertiary }) => {\r\n\r\n    const { tidbit, text, bold } = useStyles();\r\n\r\n    return (\r\n        <div className={tidbit}>\r\n            <Typography className={clsx(text, bold)}>{primary}</Typography>\r\n            <Typography className={clsx(text)}>{secondary} {tertiary && <span>({tertiary})</span>}</Typography>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst StatsList = ({\r\n    category,\r\n    attributes,\r\n    data,\r\n    sort,\r\n    onSort\r\n}) => {\r\n\r\n    const { paper, text, stats, noContent } = useStyles();\r\n\r\n    const rowRenderer = ({ style, index }) => {\r\n\r\n        const player = data.get(index);\r\n        let tidbits = [];\r\n\r\n        if (category === RUSHING) {\r\n            tidbits.push(\r\n                <Tidbit\r\n                key={`${RUSHING}_1`}\r\n                    primary={`${player[YARDS_RUSHING]} yards`}\r\n                    secondary={`${player[CARRIES]} carries`}\r\n                    tertiary={`${player[YARDS_RUSHING_AVERAGE]} y/a`}\r\n                />\r\n            );\r\n\r\n            tidbits.push(\r\n                <Tidbit\r\n                    key={`${RUSHING}_2`}\r\n                    primary={`${player[TD_RUSHING]} TDs`}\r\n                />\r\n            );\r\n        }\r\n\r\n        if (category === RECEIVING) {\r\n            tidbits.push(\r\n                <Tidbit\r\n                    key={`${RECEIVING}_1`}\r\n                    primary={`${player[YARDS_RECEIVING]} yards`}\r\n                    secondary={`${player[RECEPTIONS]} rec / ${player[TARGETS]} tgt`}\r\n                    tertiary={`${player[YARDS_RECEIVING_AVERAGE]} y/c`}\r\n                />\r\n            );\r\n\r\n            tidbits.push(\r\n                <Tidbit\r\n                    key={`${RECEIVING}_2`}\r\n                    primary={`${player[TD_RECEIVING]} TDs`}\r\n                />\r\n            );\r\n        }\r\n\r\n        if (category === RUSHING_AND_RECEIVING) {\r\n            tidbits.push(\r\n                <Tidbit\r\n                    key={`${RUSHING_AND_RECEIVING}_1`}\r\n                    primary={`${player[TOTAL_YARDS]} total yards`}\r\n                    secondary={`${player[CARRIES]} car + ${player[RECEPTIONS]} rec`}\r\n                />\r\n            );\r\n\r\n            tidbits.push(\r\n                <Tidbit\r\n                    key={`${RUSHING_AND_RECEIVING}_2`}\r\n                    primary={`${player[TOTAL_TDS]} total TDs`}\r\n                />\r\n            )\r\n        }\r\n\r\n        return (\r\n            <ListItem key={player[ID]} style={style}>\r\n                <ListItemText\r\n                    primary={player[NAME]}\r\n                    primaryTypographyProps={{\r\n                        className: text\r\n                    }}\r\n                    secondary={player[TEAM]}\r\n                    secondaryTypographyProps={{\r\n                        className: text\r\n                    }}\r\n                />\r\n                <div className={stats}>\r\n                    {tidbits}\r\n                </div>\r\n            </ListItem>\r\n        );\r\n    };\r\n\r\n    const noRowsRenderer = () => {\r\n        return (\r\n            <div className={noContent}>\r\n                No Weekly Stats\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Paper className={paper}>\r\n            <SortHelper\r\n                sort={sort}\r\n                onSort={onSort}\r\n                attributes={attributes}\r\n            />\r\n            <AutoSizer>\r\n                {({ height, width }) => (\r\n                    <VirtualizedList\r\n                        height={height - 36}    // subtract height of the SortHelper component\r\n                        width={width}\r\n                        rowCount={data.size}\r\n                        rowHeight={75}\r\n                        rowRenderer={rowRenderer}\r\n                        noRowsRenderer={noRowsRenderer}\r\n                    >\r\n                    </VirtualizedList>\r\n                )}\r\n            </AutoSizer>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default StatsList;","import React, { useCallback, useMemo } from 'react';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { \r\n    makeStyles,\r\n    Paper,\r\n    TableCell,\r\n    TableSortLabel\r\n} from '@material-ui/core';\r\nimport { AutoSizer, Table, Column } from 'react-virtualized';\r\nimport { displayConfig, NAME, TEAM } from '../constants/statAttributes';\r\n\r\nconst styles = (theme) => ({\r\n    flexContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        boxSizing: 'border-box'\r\n    },\r\n    tableRowHover: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.grey[200]\r\n        }\r\n    },\r\n    tableHeader: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        cursor: 'pointer'\r\n    },\r\n    tableCell: {\r\n        flex: 1\r\n    },\r\n    sortLabel: {\r\n        color: 'white'\r\n    },\r\n    noContent: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    }\r\n});\r\n\r\nconst ROW_HEIGHT = 48;\r\nconst rowHeightStyle = {\r\n    height: ROW_HEIGHT\r\n};\r\n\r\nclass MuiVirtualizedTable extends React.PureComponent {\r\n\r\n    createSortHandler = (property) => (event) => {\r\n        this.props.onSort(property);\r\n    };\r\n  \r\n    getRowClassName = ({ index }) => {\r\n        const { classes } = this.props;\r\n        return clsx(classes.tableRow, classes.flexContainer, {\r\n            [classes.tableRowHover]: index !== -1\r\n        });\r\n    };\r\n\r\n    headerRenderer = ({ label, columnIndex, dataKey }) => {\r\n        const { classes, sortProperties } = this.props;\r\n        const { sortBy, sortDirection } = sortProperties;\r\n\r\n        return (\r\n            <TableCell\r\n                style={rowHeightStyle}\r\n                className={clsx(classes.tableHeader, classes.tableCell, classes.flexContainer)}\r\n                component=\"div\"\r\n                variant=\"head\"\r\n                align={columnIndex === 0 ? 'left': 'right'}\r\n                sortDirection={sortBy === dataKey ? sortDirection : false}\r\n            >\r\n                <TableSortLabel\r\n                    className={classes.sortLabel}\r\n                    active={sortBy === dataKey}\r\n                    direction={sortBy === dataKey ? sortDirection : 'desc'}\r\n                    onClick={this.createSortHandler(dataKey)}\r\n                >\r\n                    {label}\r\n                </TableSortLabel>\r\n            </TableCell>\r\n        );\r\n    };\r\n  \r\n    cellRenderer = ({ cellData, dataKey, rowData, columnIndex }) => {\r\n        const { classes } = this.props;\r\n        const displayTeam = dataKey === NAME;\r\n        \r\n        return (\r\n            <TableCell\r\n                style={rowHeightStyle}\r\n                className={clsx(classes.tableCell, classes.flexContainer)}\r\n                component=\"div\"\r\n                variant=\"body\"\r\n                align={columnIndex === 0 ? 'left': 'right'}\r\n            >\r\n                {`${cellData} ${displayTeam ? `(${rowData[TEAM]})` : ''}`}\r\n            </TableCell>\r\n        );\r\n    };\r\n\r\n    noRowsRenderer = () => {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.noContent}>\r\n                No Weekly Stats\r\n            </div>\r\n        );\r\n    };\r\n  \r\n    render() {\r\n        const {\r\n            classes,\r\n            columns,\r\n            ...tableProps\r\n        } = this.props;\r\n\r\n        const columnComponents = columns.map(({ dataKey, ...other }, index) => {\r\n            return (\r\n                <Column\r\n                    key={dataKey}\r\n                    width={150}\r\n                    flexGrow={dataKey === NAME ? 2 : 1}\r\n                    className={classes.flexContainer}\r\n                    headerRenderer={(headerProps) => (\r\n                        this.headerRenderer({\r\n                            ...headerProps,\r\n                            columnIndex: index\r\n                        })\r\n                    )}\r\n                    cellRenderer={this.cellRenderer}\r\n                    dataKey={dataKey}\r\n                    {...other}\r\n                />\r\n            );\r\n        });\r\n\r\n        return (\r\n            <AutoSizer>\r\n                {({ height, width }) => (\r\n                    <Table\r\n                        height={height}\r\n                        width={width}\r\n                        rowHeight={ROW_HEIGHT}\r\n                        headerHeight={ROW_HEIGHT}\r\n                        rowClassName={this.getRowClassName}\r\n                        noRowsRenderer={this.noRowsRenderer}\r\n                        {...tableProps}\r\n                    >\r\n                        {columnComponents}\r\n                    </Table>\r\n                )}\r\n            </AutoSizer>\r\n        );\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    paper: {\r\n        height: '100%',\r\n        width: '100%'\r\n    }\r\n});\r\n\r\nconst VirtualizedTable = withStyles(styles)(MuiVirtualizedTable);\r\n\r\nconst StatsTable = ({\r\n    attributes,\r\n    data,\r\n    sort,\r\n    onSort\r\n}) => {\r\n\r\n    const { paper } = useStyles();\r\n\r\n    const rowGetter = useCallback(({ index }) => data.get(index), [data]);\r\n    const columns = useMemo(() => (\r\n        attributes.map(attribute => ({\r\n            label: displayConfig[attribute].text,\r\n            dataKey: attribute\r\n        }))\r\n    ), [attributes]);\r\n\r\n    return (\r\n        <Paper className={paper}>\r\n            <VirtualizedTable\r\n                rowCount={data.size}\r\n                rowGetter={rowGetter}\r\n                sortProperties={sort}\r\n                onSort={onSort}\r\n                columns={columns}\r\n            />\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default StatsTable;","import React, { useState, useEffect} from 'react';\r\nimport { BounceLoader } from 'react-spinners';\r\nimport { Typography, makeStyles, useTheme } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    loaderContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    loaderText: {\r\n        fontStyle: 'italic',\r\n        margin: 12\r\n    }\r\n});\r\n\r\nconst LoadingSpinner = () => {\r\n\r\n    const { loaderContainer, loaderText } = useStyles();\r\n    const [loadingText, setLoadingText] = useState('Fetching week data...');\r\n    const theme = useTheme();\r\n\r\n    useEffect(() => {\r\n\r\n        const timeout = setTimeout(() => {\r\n            setLoadingText('Compiling week data...');\r\n        }, 2000);\r\n\r\n        return () => {\r\n            clearTimeout(timeout);\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className={loaderContainer}>\r\n            <BounceLoader\r\n                size={50}\r\n                color={theme.palette.primary.main}\r\n                loading={true}\r\n            />\r\n            <Typography className={loaderText}>{loadingText}</Typography>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadingSpinner;","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { useMediaQuery } from '@material-ui/core';\r\nimport { debounce } from 'lodash';\r\nimport StatsList from './StatsList';\r\nimport StatsTable from './StatsTable';\r\nimport StatsLoadingSpinner from './StatsLoadingSpinner';\r\nimport { RUSHING, RECEIVING, RUSHING_AND_RECEIVING } from '../constants/statCategories';\r\nimport { NAME, YARDS_RUSHING, YARDS_RECEIVING, TOTAL_YARDS } from '../constants/statAttributes';\r\n\r\nconst getDefaultSort = (category) => {\r\n    let sortBy = NAME;\r\n    let sortDirection = 'desc';\r\n\r\n    if (category === RUSHING) {\r\n        sortBy = YARDS_RUSHING;\r\n    } else if (category === RECEIVING) {\r\n        sortBy = YARDS_RECEIVING;\r\n    } else if (category === RUSHING_AND_RECEIVING) {\r\n        sortBy = TOTAL_YARDS\r\n    }\r\n\r\n    return {\r\n        sortBy,\r\n        sortDirection\r\n    };\r\n};\r\n\r\nconst DataDisplay = ({ category, data, attributes, searchTerm, loading, ...props }) => {\r\n\r\n    const [sort, setSort] = useState(() => {\r\n        return getDefaultSort(category);\r\n    });\r\n    const [sortedData, setSortedData] = useState(data);\r\n    const [filteredData, setFilteredData] = useState(sortedData);\r\n    const isMobile =  useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n\r\n    const handleFiltering = useCallback(\r\n        debounce((sortedData, searchTerm) => {\r\n            setFilteredData(sortedData.filter(row => searchTerm === '' || row[NAME].toUpperCase().includes(searchTerm.toUpperCase())));\r\n        }, 50),\r\n        []\r\n    );\r\n\r\n    useEffect(() => {\r\n        const { sortBy, sortDirection } = sort;\r\n        \r\n        const sorted = data.sortBy(row => row[sortBy]);\r\n        setSortedData(sortDirection === 'asc' ? sorted : sorted.reverse());\r\n    }, [sort, data, attributes]);\r\n\r\n    useEffect(() => {\r\n        setSort(getDefaultSort(category));\r\n    }, [category]);\r\n\r\n    useEffect(() => {\r\n        handleFiltering(sortedData, searchTerm);\r\n    }, [handleFiltering, sortedData, searchTerm]);\r\n\r\n    const handleSort = useCallback(\r\n        (property) => {\r\n            const { sortBy, sortDirection } = sort;\r\n            const isDesc = sortBy === property && sortDirection === 'desc';\r\n            \r\n            setSort({\r\n                sortBy: property,\r\n                sortDirection: isDesc ? 'asc' : 'desc'\r\n            });\r\n        },\r\n        [sort]\r\n    );\r\n\r\n    const filtering = !searchTerm && !data.isEmpty() && filteredData.isEmpty();\r\n\r\n    if (loading || filtering) {\r\n        return <StatsLoadingSpinner />;\r\n    }\r\n\r\n    return isMobile ? (\r\n        <StatsList\r\n            category={category}\r\n            data={filteredData}\r\n            attributes={attributes}\r\n            sort={sort}\r\n            onSort={handleSort}\r\n            {...props}\r\n        />\r\n    ) : (\r\n        <StatsTable\r\n            data={filteredData}\r\n            attributes={attributes}\r\n            sort={sort}\r\n            onSort={handleSort}\r\n            {...props} \r\n        />\r\n    );\r\n};\r\n\r\nexport default DataDisplay;","import axios from 'axios';\r\n\r\nconst baseURL = process.env.NODE_ENV === 'production' ? 'https://fantasy-outlook.herokuapp.com/' : 'http://localhost:3001';\r\nconst outlookAPI = axios.create({\r\n    baseURL\r\n});\r\n\r\nexport default outlookAPI;","import { useEffect, useState } from 'react';\r\nimport outlookAPI from '../api/outlookAPI';\r\n\r\nconst useActiveWeek = () => {\r\n    const [week, setWeek] = useState(0);\r\n\r\n    useEffect(() => {\r\n        outlookAPI.get('/week')\r\n        .then(response => {\r\n            setWeek(response.data.week);\r\n        });\r\n    }, [setWeek]);\r\n\r\n    return [week, setWeek];\r\n};\r\n\r\nexport default useActiveWeek;","import { useState, useEffect } from 'react';\r\nimport { List, Map } from 'immutable';\r\nimport outlookAPI from '../api/outlookAPI';\r\n\r\nconst useWeeklyStats = (selectedWeek) => {\r\n\r\n    const [weeklyStats, setWeeklyStats] = useState(Map());      // each week key will have as it's value an object\r\n                                                                // that contains summarized boxscore data */ \r\n\r\n    const [loadingMap, setLoadingMap] = useState(Map());        // tracks the status of what weeks are currently\r\n                                                                // being loaded where the week is the key\r\n\r\n    useEffect(() => {\r\n        \r\n        if (selectedWeek && !loadingMap.has(selectedWeek)) {\r\n\r\n            setLoadingMap(loadingMap.set(selectedWeek, true));\r\n\r\n            outlookAPI.get(`/week/${selectedWeek}`)\r\n            .then(({ data }) => {\r\n                const playerList = List(data);\r\n                setWeeklyStats(stats => stats.set(selectedWeek, playerList));\r\n                setLoadingMap(loadingMap.set(selectedWeek, false));\r\n            });\r\n        }\r\n\r\n    }, [selectedWeek, loadingMap]);\r\n\r\n    return [weeklyStats, loadingMap];\r\n};\r\n\r\nexport default useWeeklyStats;","import React, { useState, useMemo } from 'react';\r\nimport { List } from 'immutable';\r\nimport { \r\n    Container,\r\n    Grid,\r\n    Box,\r\n    TextField,\r\n    InputAdornment,\r\n    makeStyles\r\n} from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport Select from './Select';\r\nimport DataDisplay from './DataDisplay';\r\nimport {\r\n    RUSHING,\r\n    RECEIVING,\r\n    RUSHING_AND_RECEIVING,\r\n    statCategories,\r\n    categoriesConfig,\r\n} from '../constants/statCategories';\r\nimport {\r\n    PLAYER_TYPE,\r\n    COMMON_ATTRIBUTES,\r\n    RUSHING_ATTRIBUTES,\r\n    RECEIVING_ATTRIBUTES,\r\n    RUSHING_AND_RECEIVING_ATTRIBUTES,\r\n} from '../constants/statAttributes';\r\nimport useActiveWeek from '../hooks/useActiveWeek';\r\nimport useWeeklyStats from '../hooks/useWeeklyStats';\r\n\r\nconst NUM_WEEKS = 17;\r\nconst weekNums = function() {\r\n    const weeks = [];\r\n    for (let i = 1; i <= NUM_WEEKS; i++) weeks.push(i);\r\n\r\n    return weeks;\r\n}();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: '100%',\r\n    },\r\n    box: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    controls: {\r\n        padding: 8\r\n    },\r\n    searchBar: {\r\n        marginTop: 8\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        paddingBottom: 8\r\n    }\r\n}));\r\n\r\nconst App = () => {\r\n\r\n    const { container, box, controls, searchBar, content } = useStyles();\r\n    const [category, setCategory] = useState(RUSHING);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [week, setWeek] = useActiveWeek();\r\n    const [weeklyStats, loadingMap] = useWeeklyStats(week);\r\n\r\n    const handleChangeWeek = (event) => {\r\n        setWeek(event.target.value);\r\n    };\r\n\r\n    const handleChangeCategory = (event) => {\r\n        setCategory(event.target.value);\r\n    };\r\n\r\n    const handleChangeSearchTerm = (event) => {\r\n        setSearchTerm(event.target.value);\r\n    };\r\n\r\n    const determineIfLoading = () => {\r\n        return !loadingMap.has(week) || loadingMap.get(week);\r\n    };\r\n\r\n    const filterStats = () => {\r\n        const statsOfTheWeek = weeklyStats.get(week);\r\n        if (statsOfTheWeek) {\r\n            return statsOfTheWeek.filter((player, id) => {\r\n                if (category === RUSHING) return player[PLAYER_TYPE] === RUSHING || player[PLAYER_TYPE] === RUSHING_AND_RECEIVING;\r\n                else if (category === RECEIVING) return player[PLAYER_TYPE] === RECEIVING || player[PLAYER_TYPE] === RUSHING_AND_RECEIVING;\r\n                else return true;\r\n            });\r\n        }\r\n\r\n        return List();\r\n    };\r\n\r\n    const getDisplayedAttributes = () => {\r\n        if (category === RUSHING_AND_RECEIVING) return [...COMMON_ATTRIBUTES, ...RUSHING_AND_RECEIVING_ATTRIBUTES];\r\n        else if (category === RUSHING) return [...COMMON_ATTRIBUTES, ...RUSHING_ATTRIBUTES];\r\n        else if (category === RECEIVING) return [...COMMON_ATTRIBUTES, ...RECEIVING_ATTRIBUTES];\r\n        else return [];\r\n    };\r\n\r\n    const isLoadingWeek = useMemo(determineIfLoading, [loadingMap, week]);\r\n    const filteredStats = useMemo(filterStats, [weeklyStats, week, category]);\r\n    const attributes = useMemo(getDisplayedAttributes, [category]);\r\n\r\n    const renderSelects = () => {\r\n\r\n        const weekOptions = weekNums.map(num => ({ value: num, label: num }));\r\n        const categoryOptions = statCategories.map(cat => ({ value: cat, label: categoriesConfig[cat].name }));\r\n\r\n        return (\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={6}>\r\n                    <Select label=\"Week\" value={week} onChange={handleChangeWeek}>\r\n                        {weekOptions}\r\n                    </Select>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Select label=\"Category\" value={category} onChange={handleChangeCategory}>\r\n                        {categoryOptions}\r\n                    </Select>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    };\r\n\r\n    const renderSearchField = () => {\r\n        return (\r\n            <TextField\r\n                className={searchBar}\r\n                value={searchTerm}\r\n                onChange={handleChangeSearchTerm}\r\n                label=\"Player Filter\"\r\n                placeholder=\"Search for a player\"\r\n                fullWidth\r\n                InputProps={{\r\n                    startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                            <SearchIcon />\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Container className={container}>\r\n            <Box className={box} padding={0}>\r\n                <div className={controls}>\r\n                    {renderSelects()}\r\n                    {renderSearchField()}\r\n                </div>\r\n                \r\n                <div className={content}>\r\n                    <DataDisplay\r\n                        loading={isLoadingWeek}\r\n                        category={category}\r\n                        attributes={attributes}\r\n                        data={filteredStats}\r\n                        searchTerm={searchTerm}\r\n                    />\r\n                </div>\r\n            </Box>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CssBaseline, withStyles, createMuiTheme, ThemeProvider } from '@material-ui/core';\r\nimport App from './components/App';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#002171'\r\n        }\r\n    }\r\n});\r\n\r\n// overriding the table header colors was inconsistent\r\n// so i'm just using the !important designation and being done with it\r\nconst GlobalCss = withStyles({\r\n    '@global': {\r\n        '.MuiTableSortLabel-root': {\r\n            '&:hover,&:focus': { color: 'white !important' },\r\n            color: 'white !important'\r\n        },\r\n        '.MuiTableSortLabel-root.MuiTableSortLabel-active': {\r\n            color: 'white !important',\r\n            textDecoration: 'underline !important'\r\n        },\r\n        '.MuiTableSortLabel-root.MuiTableSortLabel-active.MuiTableSortLabel-root.MuiTableSortLabel-active .MuiTableSortLabel-icon': {\r\n            color: 'white !important'\r\n        }\r\n    }\r\n})(() => null);\r\n\r\nReactDOM.render(\r\n    <>\r\n        <CssBaseline />\r\n        <ThemeProvider theme={theme}>\r\n            <GlobalCss />\r\n            <App />\r\n        </ThemeProvider>\r\n    </>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}